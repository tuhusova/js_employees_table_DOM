{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var showNotification = // Функция для показа уведомлений\n    function showNotification(type, message) {\n        var notification = document.createElement(\"div\");\n        notification.classList.add(type === \"success\" ? \"success\" : \"error\");\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.textContent = message;\n        document.body.prepend(notification);\n        setTimeout(function() {\n            return notification.remove();\n        }, 3000);\n    };\n    var clearNotifications = // Функция для очистки уведомлений\n    function clearNotifications() {\n        var notifications = document.querySelectorAll('[data-qa=\"notification\"]');\n        notifications.forEach(function(notification) {\n            return notification.remove();\n        });\n    };\n    var sortTable = function sortTable(columnIndex) {\n        var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n        var column = headers[columnIndex].textContent.trim().toLowerCase();\n        var isSalaryColumn = column === \"salary\";\n        rows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[columnIndex].textContent;\n            var cellB = rowB.cells[columnIndex].textContent;\n            if (isSalaryColumn) {\n                cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, \"\"));\n                cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, \"\"));\n            }\n            var direction = sortOrder === \"asc\" ? 1 : -1;\n            return (cellA > cellB ? 1 : -1) * direction;\n        });\n        rows.forEach(function(row) {\n            table.querySelector(\"tbody\").appendChild(row);\n        });\n        sortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    };\n    var tableContainer = document.querySelector(\"body\");\n    var formContainer = document.createElement(\"div\");\n    formContainer.classList.add(\"new-employee-form-container\");\n    // Создание формы\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    form.id = \"newEmployeeForm\";\n    // Создание полей формы\n    var fields = [\n        {\n            label: \"Name\",\n            id: \"name\",\n            type: \"text\",\n            required: true,\n            dataQa: \"name\",\n            minLength: 4\n        },\n        {\n            label: \"Position\",\n            id: \"position\",\n            type: \"text\",\n            dataQa: \"position\",\n            minLength: 4\n        },\n        {\n            label: \"Office\",\n            id: \"office\",\n            type: \"select\",\n            required: true,\n            dataQa: \"office\"\n        },\n        {\n            label: \"Age\",\n            id: \"age\",\n            type: \"number\",\n            required: true,\n            dataQa: \"age\"\n        },\n        {\n            label: \"Salary\",\n            id: \"salary\",\n            type: \"number\",\n            dataQa: \"salary\"\n        }\n    ];\n    // Заполнение полей формы\n    fields.forEach(function(field) {\n        var label = document.createElement(\"label\");\n        label.setAttribute(\"for\", field.id);\n        label.textContent = \"\".concat(field.label, \":\");\n        var input;\n        if (field.type === \"select\") {\n            input = document.createElement(\"select\");\n            input.setAttribute(\"id\", field.id);\n            input.setAttribute(\"name\", field.id);\n            input.setAttribute(\"required\", field.required);\n            input.setAttribute(\"data-qa\", field.dataQa);\n            var options = [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ];\n            options.forEach(function(optionText) {\n                var option = document.createElement(\"option\");\n                option.value = optionText;\n                option.textContent = optionText;\n                input.appendChild(option);\n            });\n        } else {\n            input = document.createElement(\"input\");\n            input.setAttribute(\"type\", field.type);\n            input.setAttribute(\"id\", field.id);\n            input.setAttribute(\"name\", field.id);\n            input.setAttribute(\"data-qa\", field.dataQa);\n        }\n        label.appendChild(input);\n        form.appendChild(label);\n    });\n    // Кнопка для отправки формы\n    var submitButton = document.createElement(\"button\");\n    submitButton.type = \"submit\";\n    submitButton.textContent = \"Save to table\";\n    form.appendChild(submitButton);\n    // Добавляем форму в контейнер\n    formContainer.appendChild(form);\n    tableContainer.appendChild(formContainer);\n    // Обработчик события для добавления нового сотрудника\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        // Получаем данные из формы\n        var nam = document.getElementById(\"name\").value.trim();\n        var position = document.getElementById(\"position\").value.trim();\n        var office = document.getElementById(\"office\").value;\n        var age = parseInt(document.getElementById(\"age\").value);\n        var salary = parseInt(document.getElementById(\"salary\").value);\n        // Валидация данных\n        var isValid = true;\n        clearNotifications(); // Очистка предыдущих уведомлений\n        if (nam.length < 4) {\n            showNotification(\"error\", \"Name must have at least 4 characters.\");\n            isValid = false;\n        }\n        if (!/^[a-zA-Zа-яА-ЯёЁ]+$/.test(nam)) {\n            showNotification(\"error\", \"Name must contain only letters.\");\n            isValid = false;\n        }\n        if (position === \"\" || position.length < 4) {\n            showNotification(\"error\", \"Position must have at least 4 characters.\");\n            isValid = false;\n        }\n        if (isNaN(age)) {\n            showNotification(\"Age is not a valid number\");\n            isValid = false;\n        // здесь можно отобразить уведомление об ошибке\n        } else if (age < 18 || age > 90) {\n            showNotification(\"Age must be between 18 and 90\");\n            isValid = false;\n        // здесь можно отобразить уведомление об ошибке\n        } else showNotification(\"Age is valid:\", age);\n        if (isNaN(salary)) {\n            showNotification(\"error\", \"Salary must be a number.\");\n            isValid = false;\n        }\n        if (!isValid) return;\n        // Создаем строку таблицы для нового сотрудника\n        var row = document.createElement(\"tr\");\n        row.innerHTML = \"\\n      <td>\".concat(nam, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>$\").concat(salary.toLocaleString(), \"</td>\\n    \");\n        // Добавляем строку в таблицу\n        document.querySelector(\"tbody\").appendChild(row);\n        // Очищаем форму после добавления сотрудника\n        document.getElementById(\"newEmployeeForm\").reset();\n        showNotification(\"success\", \"New employee added successfully\");\n    });\n    // Сортировка таблицы при клике на заголовки\n    var table = document.querySelector(\"table\");\n    var headers = table.querySelectorAll(\"thead th\");\n    var sortOrder = \"asc\";\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            sortTable(index);\n        });\n    });\n    // Добавление класса 'active' при клике на строку\n    table.addEventListener(\"click\", function(ev) {\n        if (ev.target.tagName === \"TD\") {\n            var rows = table.querySelectorAll(\"tbody tr\");\n            rows.forEach(function(row) {\n                return row.classList.remove(\"active\");\n            });\n            var clickedRow = ev.target.closest(\"tr\");\n            clickedRow.classList.add(\"active\");\n        }\n    });\n});\n\n//# sourceMappingURL=index.fb6b36d1.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const tableContainer = document.querySelector('body');\n  const formContainer = document.createElement('div');\n\n  formContainer.classList.add('new-employee-form-container');\n\n  // Создание формы\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n  form.id = 'newEmployeeForm';\n\n  // Создание полей формы\n  const fields = [\n    {\n      label: 'Name',\n      id: 'name',\n      type: 'text',\n      required: true,\n      dataQa: 'name',\n      minLength: 4,\n    },\n    {\n      label: 'Position',\n      id: 'position',\n      type: 'text',\n      dataQa: 'position',\n      minLength: 4,\n    },\n    {\n      label: 'Office',\n      id: 'office',\n      type: 'select',\n      required: true,\n      dataQa: 'office',\n    },\n    {\n      label: 'Age',\n      id: 'age',\n      type: 'number',\n      required: true,\n      dataQa: 'age',\n    },\n    {\n      label: 'Salary',\n      id: 'salary',\n      type: 'number',\n      dataQa: 'salary',\n    },\n  ];\n\n  // Заполнение полей формы\n  fields.forEach((field) => {\n    const label = document.createElement('label');\n\n    label.setAttribute('for', field.id);\n    label.textContent = `${field.label}:`;\n\n    let input;\n\n    if (field.type === 'select') {\n      input = document.createElement('select');\n      input.setAttribute('id', field.id);\n      input.setAttribute('name', field.id);\n      input.setAttribute('required', field.required);\n      input.setAttribute('data-qa', field.dataQa);\n\n      const options = [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ];\n\n      options.forEach((optionText) => {\n        const option = document.createElement('option');\n\n        option.value = optionText;\n        option.textContent = optionText;\n        input.appendChild(option);\n      });\n    } else {\n      input = document.createElement('input');\n      input.setAttribute('type', field.type);\n      input.setAttribute('id', field.id);\n      input.setAttribute('name', field.id);\n      input.setAttribute('data-qa', field.dataQa);\n    }\n\n    label.appendChild(input);\n    form.appendChild(label);\n  });\n\n  // Кнопка для отправки формы\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.textContent = 'Save to table';\n  form.appendChild(submitButton);\n\n  // Добавляем форму в контейнер\n  formContainer.appendChild(form);\n  tableContainer.appendChild(formContainer);\n\n  // Обработчик события для добавления нового сотрудника\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    // Получаем данные из формы\n    const nam = document.getElementById('name').value.trim();\n    const position = document.getElementById('position').value.trim();\n    const office = document.getElementById('office').value;\n    const age = parseInt(document.getElementById('age').value);\n    const salary = parseInt(document.getElementById('salary').value);\n\n    // Валидация данных\n    let isValid = true;\n\n    clearNotifications(); // Очистка предыдущих уведомлений\n\n    if (nam.length < 4) {\n      showNotification('error', 'Name must have at least 4 characters.');\n      isValid = false;\n    }\n\n    if (!/^[a-zA-Zа-яА-ЯёЁ]+$/.test(nam)) {\n      showNotification('error', 'Name must contain only letters.');\n      isValid = false;\n    }\n\n    if (position === '' || position.length < 4) {\n      showNotification('error', 'Position must have at least 4 characters.');\n      isValid = false;\n    }\n\n    if (isNaN(age)) {\n      showNotification('Age is not a valid number');\n      isValid = false;\n      // здесь можно отобразить уведомление об ошибке\n    } else if (age < 18 || age > 90) {\n      showNotification('Age must be between 18 and 90');\n      isValid = false;\n      // здесь можно отобразить уведомление об ошибке\n    } else {\n      showNotification('Age is valid:', age);\n      // дальнейшие действия с корректным значением возраста\n    }\n\n    if (isNaN(salary)) {\n      showNotification('error', 'Salary must be a number.');\n      isValid = false;\n    }\n\n    if (!isValid) {\n      return;\n    }\n\n    // Создаем строку таблицы для нового сотрудника\n    const row = document.createElement('tr');\n\n    row.innerHTML = `\n      <td>${nam}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${salary.toLocaleString()}</td>\n    `;\n\n    // Добавляем строку в таблицу\n    document.querySelector('tbody').appendChild(row);\n\n    // Очищаем форму после добавления сотрудника\n    document.getElementById('newEmployeeForm').reset();\n    showNotification('success', 'New employee added successfully');\n  });\n\n  // Функция для показа уведомлений\n  function showNotification(type, message) {\n    const notification = document.createElement('div');\n\n    notification.classList.add(type === 'success' ? 'success' : 'error');\n    notification.setAttribute('data-qa', 'notification');\n    notification.textContent = message;\n    document.body.prepend(notification);\n    setTimeout(() => notification.remove(), 3000);\n  }\n\n  // Функция для очистки уведомлений\n  function clearNotifications() {\n    const notifications = document.querySelectorAll('[data-qa=\"notification\"]');\n\n    notifications.forEach((notification) => notification.remove());\n  }\n\n  // Сортировка таблицы при клике на заголовки\n  const table = document.querySelector('table');\n  const headers = table.querySelectorAll('thead th');\n  let sortOrder = 'asc';\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      sortTable(index);\n    });\n  });\n\n  function sortTable(columnIndex) {\n    const rows = Array.from(table.querySelectorAll('tbody tr'));\n    const column = headers[columnIndex].textContent.trim().toLowerCase();\n    const isSalaryColumn = column === 'salary';\n\n    rows.sort((rowA, rowB) => {\n      let cellA = rowA.cells[columnIndex].textContent;\n      let cellB = rowB.cells[columnIndex].textContent;\n\n      if (isSalaryColumn) {\n        cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n        cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n      }\n\n      const direction = sortOrder === 'asc' ? 1 : -1;\n\n      return (cellA > cellB ? 1 : -1) * direction;\n    });\n\n    rows.forEach((row) => {\n      table.querySelector('tbody').appendChild(row);\n    });\n\n    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n  }\n\n  // Добавление класса 'active' при клике на строку\n  table.addEventListener('click', (ev) => {\n    if (ev.target.tagName === 'TD') {\n      const rows = table.querySelectorAll('tbody tr');\n\n      rows.forEach((row) => row.classList.remove('active'));\n\n      const clickedRow = ev.target.closest('tr');\n\n      clickedRow.classList.add('active');\n    }\n  });\n});\n"],"names":["document","addEventListener","showNotification","type","message","notification","createElement","classList","add","setAttribute","textContent","body","prepend","setTimeout","remove","clearNotifications","notifications","querySelectorAll","forEach","sortTable","columnIndex","rows","Array","from","table","isSalaryColumn","column","headers","trim","toLowerCase","sort","rowA","rowB","cellA","cells","cellB","parseFloat","replace","sortOrder","row","querySelector","appendChild","tableContainer","formContainer","form","id","fields","label","required","dataQa","minLength","field","input","concat","options","optionText","option","value","submitButton","e","preventDefault","nam","getElementById","position","office","age","parseInt","salary","isValid","length","test","isNaN","innerHTML","toLocaleString","reset","header","index","ev","target","tagName","clickedRow","closest"],"version":3,"file":"index.fb6b36d1.js.map"}